﻿@model Infraestructure.Models.Restaurante

@{
    ViewBag.Title = "EditarRestauranteView";
    List<SelectListItem> estado = ViewBag.listaEstado;
    List<SelectListItem> tipoRestaurante = ViewBag.TipoRestaurante;
}

<link href="~/Content/Estilos/Agregar-Editar.css" rel="stylesheet" />
<h1 style="text-align: center">Editar restaurante</h1>
<style>
    .este {
        height: 35em;
        overflow: auto;
    }
</style>

@using (Html.BeginForm("EditarRestaurante", "Restaurante", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div id="detalleseleccion" name="detalleseleccion" class="este">
        <main class="form-signin w-100 m-auto">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID_Restaurante)

                <div class="form-floating mb-3">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    <label for="floatingInput">Nombre del restaurante</label>
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>

                <div class="form-floating mb-3">
                    @Html.EditorFor(model => model.Provincia, new { htmlAttributes = new { @class = "form-control" } })
                    <label for="floatingInput">Provincia</label>
                    @Html.ValidationMessageFor(model => model.Provincia, "", new { @class = "text-danger" })
                </div>

                <div class="form-floating mb-3">
                    @Html.EditorFor(model => model.Canton, new { htmlAttributes = new { @class = "form-control" } })
                    <label for="floatingInput">Cantón</label>
                    @Html.ValidationMessageFor(model => model.Canton, "", new { @class = "text-danger" })
                </div>

                <div class="form-floating mb-3">
                    @Html.EditorFor(model => model.Distrito, new { htmlAttributes = new { @class = "form-control" } })
                    <label for="floatingInput">Distrito</label>
                    @Html.ValidationMessageFor(model => model.Distrito, "", new { @class = "text-danger" })
                </div>

                <div class="form-floating mb-3">
                    @Html.EditorFor(model => model.DireccionExacta, new { htmlAttributes = new { @class = "form-control" } })
                    <label for="floatingInput">Dirección exacta</label>
                    @Html.ValidationMessageFor(model => model.DireccionExacta, "", new { @class = "text-danger" })
                </div>

                <div class="form-floating mb-3">
                    @Html.DropDownListFor(model => model.ID_TipoRestaurante, (IEnumerable<SelectListItem>)ViewBag.TipoRestaurante, new { @class = "form-select", id = "ID_TipoRestaurante" })
                    <label for="ID_TipoRestaurante">Tipo de restaurante</label>
                    @Html.ValidationMessageFor(model => model.ID_TipoRestaurante, "", new { @class = "text-danger" })
                </div>


                @if (Model.Fotografia != null)
                {
                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Fotografia, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="image"
                                   src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.Fotografia)"
                                   id="ImageFile"
                                   style="height:200px;width:300px" />
                            @Html.HiddenFor(model => model.Fotografia)
                        </div>
                    </div>
                }

                <div class="form-floating mb-3">

                    <select class="form-select" id="exampleSelect1" name="EstadoActual">
                        @foreach (var estadoActual in ViewBag.listaEstado as List<SelectListItem>)
                        {
                            <option value="@estadoActual.Value" @(Model.EstadoActual == estadoActual.Value ? "selected" : "")>@estadoActual.Text</option>
                        }
                    </select>
                    <label for="floatingInput">Estado actual</label>
                    @Html.ValidationMessageFor(model => model.EstadoActual, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar cambios" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </main>
    </div>

}
